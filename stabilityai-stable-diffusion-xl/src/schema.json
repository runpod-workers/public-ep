{
    "/stabilityai-stable-diffusion-xl/{run_type}": {
        "post": {
            "summary": "Stable Diffusion XL",
            "description": "Generate high-quality images using Stability AI's SDXL model - supports higher resolutions and better prompt following",
            "operationId": "stable-diffusion-xl",
            "parameters": [
                {
                    "name": "run_type",
                    "in": "path",
                    "schema": {
                        "type": "string",
                        "enum": [
                            "run",
                            "runsync"
                        ],
                        "default": "runsync"
                    },
                    "required": true
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "input": {
                                    "properties": {
                                        "prompt": {
                                            "type": "string",
                                            "description": "Your input prompt for image generation.",
                                            "default": "a futuristic cityscape at night with neon lights"
                                        },
                                        "negative_prompt": {
                                            "type": "string",
                                            "description": "Specify things to not see in the output.",
                                            "default": ""
                                        },
                                        "height": {
                                            "type": "integer",
                                            "description": "Height of output image. Recommended: 1024. Options: 512, 768, 1024, 1152, 1216",
                                            "default": 1024,
                                            "format": "int32"
                                        },
                                        "width": {
                                            "type": "integer",
                                            "description": "Width of output image. Recommended: 1024. Options: 512, 768, 1024, 1152, 1216",
                                            "default": 1024,
                                            "format": "int32"
                                        },
                                        "num_outputs": {
                                            "type": "integer",
                                            "description": "The number of images to output. Range 1 - 4",
                                            "default": 1,
                                            "format": "int32"
                                        },
                                        "num_inference_steps": {
                                            "type": "integer",
                                            "description": "The number of denoising steps. Range: 20-100. Higher = better quality, slower generation",
                                            "default": 50,
                                            "format": "int32"
                                        },
                                        "guidance_scale": {
                                            "type": "number",
                                            "description": "Scale for classifier-free guidance. Higher values follow prompt more closely. Range: 1-20",
                                            "default": 7.5,
                                            "format": "float"
                                        },
                                        "scheduler": {
                                            "type": "string",
                                            "description": "Choose a scheduler for the diffusion process.",
                                            "default": "K_EULER",
                                            "enum": [
                                                "DDIM",
                                                "K_EULER",
                                                "DPMSolverMultistep",
                                                "K_EULER_ANCESTRAL",
                                                "PNDM",
                                                "KLMS"
                                            ]
                                        },
                                        "seed": {
                                            "type": "integer",
                                            "description": "Random seed for reproducible results. Leave blank for random.",
                                            "format": "int32"
                                        },
                                        "refine": {
                                            "type": "string",
                                            "description": "Which refine style to use. Options: expert_ensemble_refiner, base_image_refiner",
                                            "default": "expert_ensemble_refiner",
                                            "enum": [
                                                "expert_ensemble_refiner",
                                                "base_image_refiner",
                                                "no_refiner"
                                            ]
                                        },
                                        "high_noise_frac": {
                                            "type": "number",
                                            "description": "For expert_ensemble_refiner, the fraction of noise to use. Range: 0.0-1.0",
                                            "default": 0.8,
                                            "format": "float"
                                        }
                                    },
                                    "required": [
                                        "prompt"
                                    ],
                                    "type": "object",
                                    "description": "Input object contains prompt and SDXL-specific parameters."
                                },
                                "webhook": {
                                    "type": "string",
                                    "description": "URL endpoint to receive a webhook call on job complete, fail, or timeout."
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "200",
                    "content": {
                        "application/json": {
                            "examples": {
                                "Async Result": {
                                    "value": "{\n  \"id\": \"sdxl-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"status\": \"IN_QUEUE\"\n}"
                                },
                                "Sync Result": {
                                    "value": "{\n  \"delayTime\": 1800,\n  \"executionTime\": 28000,\n  \"id\": \"sdxl-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"output\": {\n    \"images\": [\n      \"https://image.runpod.ai/gen-images/sdxl/sample-output-1.jpeg\"\n    ],\n    \"message\": \"Images generated successfully with SDXL\",\n    \"status\": \"success\"\n  },\n  \"status\": \"COMPLETED\",\n  \"workerId\": \"sdxl-worker-gpu24\"\n}"
                                }
                            },
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "sdxl-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "COMPLETED",
                                        "enum": [
                                            "IN_QUEUE",
                                            "IN_PROGRESS",
                                            "COMPLETED",
                                            "FAILED"
                                        ]
                                    },
                                    "delayTime": {
                                        "type": "integer",
                                        "description": "Time in milliseconds before job processing started",
                                        "example": 1800
                                    },
                                    "executionTime": {
                                        "type": "integer",
                                        "description": "Time in milliseconds taken to generate the image(s)",
                                        "example": 28000
                                    },
                                    "output": {
                                        "type": "object",
                                        "properties": {
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "format": "uri"
                                                },
                                                "description": "Array of URLs for generated images",
                                                "example": [
                                                    "https://image.runpod.ai/gen-images/sdxl/sample-output-1.jpeg"
                                                ]
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "Human-readable message about the generation result",
                                                "example": "Images generated successfully with SDXL"
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the image generation",
                                                "example": "success",
                                                "enum": [
                                                    "success",
                                                    "failed",
                                                    "error"
                                                ]
                                            }
                                        }
                                    },
                                    "workerId": {
                                        "type": "string",
                                        "description": "Identifier of the worker that processed the job",
                                        "example": "sdxl-worker-gpu24"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "400",
                    "content": {
                        "application/json": {
                            "examples": {
                                "Result": {
                                    "value": "{\n  \"error\": \"INVALID_INPUT\",\n  \"message\": \"Invalid input parameters\"\n}"
                                }
                            },
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string",
                                        "example": "INVALID_INPUT"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Invalid input parameters"
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "description": "401",
                    "content": {
                        "text/plain": {
                            "examples": {
                                "Result": {
                                    "value": "Unauthorized"
                                }
                            }
                        }
                    }
                },
                "429": {
                    "description": "429",
                    "content": {
                        "text/plain": {
                            "examples": {
                                "Result": {
                                    "value": "Too Many Requests"
                                }
                            }
                        }
                    }
                }
            },
            "deprecated": false
        }
    }
}