{
  "openapi": "3.1.0",
  "info": {
    "title": "FLUX-1-Schnell API",
    "version": "1.0",
    "description": "Fast AI image generation using Black Forest Labs FLUX-1-Schnell model"
  },
  "servers": [
    {
      "url": "https://api.runpod.ai/v2",
      "description": "Production server"
    },
    {
      "url": "https://dev-api.runpod.ai/v2",
      "description": "Development server"
    }
  ],
  "paths": {
    "/black-forest-labs-flux-1-schnell/{run_type}": {
      "post": {
        "summary": "FLUX-1-Schnell Image Generation",
        "description": "Generate images using Black Forest Labs FLUX-1-Schnell model - fastest model in the FLUX family",
        "operationId": "flux-1-schnell",
        "parameters": [
          {
            "name": "run_type",
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "run",
                "runsync"
              ],
              "default": "runsync"
            },
            "required": true,
            "description": "Execution type: 'run' for async, 'runsync' for synchronous"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "object",
                    "properties": {
                      "prompt": {
                        "type": "string",
                        "description": "Text description of the image to generate.",
                        "example": "a photograph of a dog"
                      },
                      "negative_prompt": {
                        "type": "string",
                        "description": "Text description of what to avoid in the generated image.",
                        "default": "",
                        "example": "blurry, low quality, distorted"
                      },
                      "height": {
                        "type": "integer",
                        "description": "Height of the generated image in pixels. Must be multiple of 64. Range: 256-2048",
                        "default": 1024,
                        "minimum": 256,
                        "maximum": 2048,
                        "multipleOf": 64,
                        "example": 1024
                      },
                      "width": {
                        "type": "integer",
                        "description": "Width of the generated image in pixels. Must be multiple of 64. Range: 256-2048",
                        "default": 1024,
                        "minimum": 256,
                        "maximum": 2048,
                        "multipleOf": 64,
                        "example": 1024
                      },
                      "num_inference_steps": {
                        "type": "integer",
                        "description": "Number of denoising steps. More steps generally produce higher quality. Range: 1-50",
                        "default": 25,
                        "minimum": 1,
                        "maximum": 50,
                        "example": 25
                      },
                      "guidance": {
                        "type": "number",
                        "description": "Guidance scale. Higher values follow the prompt more closely. Range: 1.0-20.0",
                        "default": 7.5,
                        "minimum": 1.0,
                        "maximum": 20.0,
                        "example": 7.5
                      },
                      "seed": {
                        "type": "integer",
                        "description": "Random seed for reproducible results. Use 0 for random seed.",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 2147483647,
                        "example": 42
                      }
                    },
                    "required": [
                      "prompt"
                    ],
                    "additionalProperties": false
                  },
                  "webhook": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL endpoint to receive a webhook call on job complete, fail, or timeout.",
                    "example": "https://your-domain.com/webhook"
                  }
                },
                "required": ["input"],
                "additionalProperties": false
              },
              "examples": {
                "basic_generation": {
                  "summary": "Basic image generation",
                  "value": {
                    "input": {
                      "prompt": "a photograph of a dog",
                      "height": 1024,
                      "width": 1024,
                      "num_inference_steps": 25,
                      "guidance": 7.5,
                      "seed": 0
                    }
                  }
                },
                "advanced_generation": {
                  "summary": "Advanced generation with negative prompt",
                  "value": {
                    "input": {
                      "prompt": "a beautiful landscape with mountains and a lake at sunset",
                      "negative_prompt": "blurry, low quality, distorted",
                      "height": 1024,
                      "width": 1024,
                      "num_inference_steps": 30,
                      "guidance": 8.0,
                      "seed": 42
                    },
                    "webhook": "https://your-domain.com/webhook"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique job identifier",
                      "example": "a20e645a-a518-42ec-954c-2127ad50a6d1-u1"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["IN_QUEUE", "IN_PROGRESS", "COMPLETED", "FAILED"],
                      "description": "Current job status",
                      "example": "COMPLETED"
                    },
                    "delayTime": {
                      "type": "integer",
                      "description": "Time in milliseconds before job processing started",
                      "example": 1250
                    },
                    "executionTime": {
                      "type": "integer",
                      "description": "Time in milliseconds taken to generate the image",
                      "example": 36808
                    },
                    "output": {
                      "type": "object",
                      "properties": {
                        "image_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL of the generated image",
                          "example": "https://image.runpod.ai/gen-images/5/31/OedcZuz4db/0ac99957-a872-4232-b5f5-854b790fcec8.jpeg"
                        },
                        "message": {
                          "type": "string",
                          "description": "Human-readable message about the generation result",
                          "example": "Image generated successfully"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["success", "failed", "error"],
                          "description": "Generation status",
                          "example": "success"
                        }
                      },
                      "required": ["image_url", "message", "status"]
                    },
                    "workerId": {
                      "type": "string",
                      "description": "Identifier of the worker that processed the job",
                      "example": "cupm07n9s2ywuo"
                    }
                  },
                  "required": ["id", "status"]
                },
                "examples": {
                  "async_result": {
                    "summary": "Async execution result",
                    "value": {
                      "id": "a20e645a-a518-42ec-954c-2127ad50a6d1-u1",
                      "status": "IN_QUEUE"
                    }
                  },
                  "sync_result": {
                    "summary": "Synchronous execution result",
                    "value": {
                      "delayTime": 1250,
                      "executionTime": 36808,
                      "id": "a20e645a-a518-42ec-954c-2127ad50a6d1-u1",
                      "output": {
                        "image_url": "https://image.runpod.ai/gen-images/5/31/OedcZuz4db/0ac99957-a872-4232-b5f5-854b790fcec8.jpeg",
                        "message": "Image generated successfully",
                        "status": "success"
                      },
                      "status": "COMPLETED",
                      "workerId": "cupm07n9s2ywuo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "INVALID_INPUT"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input parameters"
                    },
                    "details": {
                      "type": "object",
                      "description": "Additional error details"
                    }
                  },
                  "required": ["error", "message"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "text/plain": {
                "example": "Unauthorized"
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Rate limit exceeded",
            "content": {
              "text/plain": {
                "example": "Too Many Requests"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "INTERNAL_SERVER_ERROR"
                    },
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred"
                    }
                  },
                  "required": ["error", "message"]
                }
              }
            }
          }
        },
        "tags": ["Image Generation"],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "RunPod API key as Bearer token"
      }
    }
  },
  "tags": [
    {
      "name": "Image Generation",
      "description": "AI-powered image generation operations"
    }
  ]
}